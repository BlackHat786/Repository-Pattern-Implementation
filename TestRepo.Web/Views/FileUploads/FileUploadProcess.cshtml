@model TestRepo.ViewModel.ViewModels.FileUploadsViewModel.FileUploadsViewModel
@{
    ViewBag.Title = "FileUploadProcess";
}

<h2>FileUploadProcess</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "container", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "cols-sm-2 control-label" })
        <div class="cols-sm-10">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>
                @Html.TextBoxFor(model => model.File, new { type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.File, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "cols-sm-2 control-label" })
        <div class="cols-sm-10">
            <div class="input-group">
                <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>
                @Html.TextBoxFor(model => model.FileName, new { @class = "form-control", placeholder = "File Name" })
                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>



    <button type="submit" class="btn btn-success">Upload File</button>


}